<template>
  <!-- Only one root node is allowed in template. -->
  <div class="page-container">
    <text class="title">Hello World!!</text>
    <input class="btn" type="button" value="Call" id="call" @click="makeCall"/>
    <input class="btn" type="button" value="Hang Up" id="hangup" @click="endCall"/>
    <div id="status"></div>
  </div>
</template>

<style>
  .page-container {
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }

  .title {
    font-size: 80px;
    font-weight: bold;
    color: #871fff;
    text-align: center;
  }

  .subtitle {
    font-size: 40px;
    text-align: center;
  }

  .btn {
    width: 550px;
    height: 86px;
    margin-top: 75px;
    border-radius: 43px;
    background-color: #871fff;
    font-size: 30px;
    color: #ffffff;
  }

  .phone {
    width: 550px;
    height: 86px;
    padding: 10px;
    margin-top: 75px;
    background-color: #d1d1d1;
    font-size: 30px;
  }
</style>

<script>
  import prompt from '@system.prompt'
  import VoiceClient from '@vonage/client-sdk'
  import ClientConfig from '@vonage/client-sdk'
  import ConfigRegion from '@vonage/client-sdk'

  /** 
  The JWT token to authenticate with Vonage voice API. 
  Follow https://developer.vonage.com/client-sdk/setup/create-your-application to generate this and make sure of the Vonage voice API
  In a real world application this should be generated by the Server SDK https://developer.vonage.com/tools
  */
  let vonageJWT = ''
  let client = new VoiceClient();
  let config = new ClientConfig(ConfigRegion.EU);
  let currentCall;
  let sessionId;

  client.setConfig(config);

  module.exports = {
    data: {
      componentData: {},
    },
    onInit() {
      this.$page.setTitleBar({
        text: 'Vonage Voice Call',
        textColor: '#ffffff',
        backgroundColor: '#007DFF',
        backgroundOpacity: 0.5,
        menu: true
      });

      if (vonageJWT !== "") {
        //init call object
        try {
          console.log("Starting session");
            client.createSession(vonageJWT, null)
            .then(app => {
              sessionId = app
              console.log("Active Session ID: ",sessionId)
            })
            .catch(err => console.log(err));
          } catch (e) {
            console.log({ e });
          }
      } else {
        prompt.showToast({
          message: 'Error: Vonage JWT not set',
          duration: 2000,
          gravity: 'center'
        })
      }
    },

    makeCall() {
      client.serverCall({
        callee: "PHONE_NUMBER"
      })
      .then(app => {
              currentCall = app
              console.log("Current Call: ",currentCall)
            })
      .catch(err => console.log(err));
    },
    endCall() {
      console.info('Implement the end call method here')
      currentCall.hangup()
    }

  }
</script>